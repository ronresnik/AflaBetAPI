{
  "swagger": "2.0",
  "info": {
    "title": "Event Management API",
    "version": "1.0.0",
    "description": "API for scheduling and managing events"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Events",
      "description": "Endpoints for managing events"
    },
    {
      "name": "Users",
      "description": "Endpoints for user registration and login"
    }
  ],
  "paths": {
    "/events": {
      "post": {
        "tags": ["Events"],
        "summary": "Schedule a new event",
        "operationId": "scheduleEvent",
        "security": [{"BearerAuth": []}],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "event",
            "description": "Event details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Event scheduled successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": ["Events"],
        "summary": "Get a list of scheduled events",
        "operationId": "getEvents",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "description": "Filter by location",
            "type": "string"
          },
          {
            "in": "query",
            "name": "venue",
            "description": "Filter by venue",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "Sort by parameter (date, popularity, creation_time)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/EventList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/events/{event_id}": {
      "get": {
        "tags": ["Events"],
        "summary": "Get details of a specific event",
        "operationId": "getEventDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "ID of the event",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Event details",
            "schema": {
              "$ref": "#/definitions/EventDetails"
            }
          },
          "404": {
            "description": "Event not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["Events"],
        "summary": "Update details of a specific event",
        "operationId": "updateEvent",
        "security": [{"BearerAuth": []}],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "ID of the event",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "event",
            "description": "Event details to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Event not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Events"],
        "summary": "Delete a specific event",
        "operationId": "deleteEvent",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "in": "path",
            "name": "event_id",
            "description": "ID of the event",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Event not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EventInput": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "venue": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "event_date": {
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["title", "description", "venue", "location", "event_date"]
    },
    "EventList": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDetails"
          }
        }
      }
    },
    "EventDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "venue": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "event_date": {
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants": {
          "type": "integer"
        }
      },
      "required": ["id", "title", "description", "venue", "location", "event_date", "tags", "participants"]
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
